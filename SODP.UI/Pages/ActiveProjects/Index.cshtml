@page
@using Microsoft.AspNetCore.Identity
@using SODP.Model
@using System.Text.Json;
@using System.Text.Json.Serialization;

@model IndexModel

@{
	ViewData["Title"] = "Projekty aktywne";
}

@inject SignInManager<User> SignInManager

<div class="row mb-2">
	<div class="col-8 p-0">
		<h2 class="text-info p-0">@ViewData["Title"]</h2>
	</div>

	@if (User.IsInRole("ProjectManager"))
	{
		<div class="col-4 p-0">
			<button type="button"
				class="btn btn-info form-control text-white float-right h-100"
				title="Nowy projekt"
				onclick = "NewProject()">
				<i class="fas fa-plus"></i>&nbsp;&nbsp;&nbsp;Nowy projekt 
			</button>
		</div>
	}
</div>

<partial name="_SearchString" />

@if (Model.Projects.Projects.Count() > 0)
{
	<div id="projectsAccordion" class="accordion">
		@foreach (var item in Model.Projects.Projects)
		{
			<div class="button card border-light">
				<div class="card-header border-light p-0 d-flex align-items-center" style="background-color:white" id="card-header-@item.Id">
					<div class="col font-weight-bold clickable"
						 onclick="accordionCollapse(@item.Id)"
						 id="card-head-@item.Id"
						 data-toggle="collapse"
						 data-target="#collapse-@item.Id"
						 aria-expanded="false"
						 aria-controls="collapse-@item.Id">
						@item.Number @item.Stage.Sign @item.Name
					</div>
					<div class="colgroup justify-content-end mr-2">
						@if (User.IsInRole("ProjectManager"))
						{
							<a name="additionalBtn"
							   id="editProject-@item.Id"
							   onclick='Edit(@item.Id)'
							   class="btn btn-lg mb-1 mt-1 ml-1 mr-1 p-1"
							   data-toggle="tooltip"
							   data-placement="top"
							   title="Edycja">
								<i class="fas fa-edit fa-lg text-success"></i>
							</a>
							<a onclick="Archive(@item.Id)"
							   class="btn"
							   data-toggle="tooltip"
							   data-placement="top"
							   title="Przenieś projekt do archiwum">
								<i class="fas fa-archive fa-lg text-success"></i>
							</a>
							<a onclick='DeleteProject(@item.Id)'
							   class="btn"
							   data-toggle="tooltip"
							   data-placement="top"
							   title="Usuń projekt">
								<i class="fas fa-times fa-lg text-danger"></i>
							</a>
						}
					</div>
				</div>
			</div>
			<div id="collapse-@item.Id"
				 class="collapse hide"
				 aria-labelledby="heading-@item.Id"
				 data-parent="#projectsAccordion">
				<div class="card-body" id="project-@item.Id">
					Coś poszło nie tak z ładowaniem szczegółów
				</div>
			</div>
		}
	</div>
	<br/>
	@if (Model.PageInfo.TotalPages > 1)
	{
		<div class="col text-center">
			<div page-model="@Model.PageInfo"
				 page-class="btn border"
				 page-class-normal="btn btn-light"
				 page-class-selected="btn btn-info"
				 page-class-prev-next="btn"
				 nav-margin="4"
				 class="btn-group">
			</div>
		</div>
	}
}
else
{
	<br />
	<p> Lista projektów jest pusta</p>
}

@section Scripts{
	<script src="~/js/delete.js"></script>
	<script>
		function NewProject() {
			$.ajax({
				type: "Get",
				url: `@Url.Page("Index","NewProject")`,
				success: function (data) {
					$('#modal-placeholder').html(data);
					$('#newProject').modal('show');
				},
				error: function (jqXHR, exception) {
					console.log(jqXHR);
					console.log(exception);
				}
			})
		}

		function Edit(id) {
			$.ajax({
				type: "GET",
				url: `/ActiveProjects/Index?handler=Project&id=${id}`,
				success: function (data) {
					if (data.success && data.status === 0) {
						window.location = `/ActiveProjects/Edit?Id=${id}#details`;
					} else {
						setMessageAndReload({
							type: "error",
							message: "Projekt jest procesowany i nie można go edytować."
						});
					}
				},
				error: function (jqXHR, exception) {
					console.error("Błąd podczas sprawdzania statusu projektu:", jqXHR, exception);
					toastr.error("Nie udało się sprawdzić statusu projektu.");
				}
			});
		}

		function DeleteProject(id) {
			$.ajax({
				type: "GET",
				url: `/ActiveProjects/Index?handler=Project&id=${id}`,
				success: function (data) {
					if (data.success && data.status === 0) {
						Delete(`/api/v0_01/projects/${id}`,"Usunięcie projektu nie może być cofnięte");
					} else {
						setMessageAndReload({
							type: "error",
							message: "Projekt jest procesowany i nie można go skasować."
						});
					}
				},
				error: function (jqXHR, exception) {
					console.error("Błąd podczas sprawdzania statusu projektu:", jqXHR, exception);
					toastr.error("Nie udało się sprawdzić statusu projektu.");
				}
			});
		}

		function Archive(id) {
            $.ajax({
                type: "GET",
                url: `/ActiveProjects/Index?handler=Project&id=${id}`,
                success: function (data) {
                    if (data.success && data.status !== 0) {
						localStorage.setItem("toastrMessage",
							{
								type: "error",
								message: "Projekt jest procesowany i nie można go zarchiwizować.",
							});
						window.location.reload();
					} else {
						swal({
							title: "Czy jesteś pewien?",
							text: "Przesunięcie projektu do archiwum.",
							icon: "warning",
							buttons: true,
							dangerMode: true
						}).then((willArchive) => {
							if (willArchive) {
								$.ajax({
									type: "PATCH",
									url: `/api/v0_01/projects/${id}/archive`,
									success: function (data) {
										if (data.success) {
											setMessageAndReload({
												type: "success",
												message: data.message
											});
										}
										else {
											toastr.error(data.message);
										}
									}
								})
							}
						})
					}
                },
                error: function (jqXHR, exception) {
                    console.error("Błąd podczas sprawdzania statusu projektu:", jqXHR, exception);
                    toastr.error("Nie udało się sprawdzić statusu projektu.");
                }
            });
		}

		function initModalPlaceHolder() {
			var placeholderElement = $('#modal-placeholder');
			placeholderElement.on('click', '[data-save="modal"]', function (event) {
				event.preventDefault();
				var form = $(this).parents('.modal').find('form');
				var actionUrl = form.attr('action');
				var dataToSend = form.serialize();

				$.post(actionUrl, dataToSend).done(function (data) {
					var newBody = $('.modal-body', data);
					placeholderElement.find('.modal-body').replaceWith(newBody);
					var isValid = newBody.find('[name="IsValidate"]').val() == 'True';
					var id = newBody.find('[id="id"]').val();
					if(id != 0){
						location = `/ActiveProjects/Edit?Id=${id}#details`;
					}
				});
			});
		}

		function accordionCollapse(id) {
			if (document.getElementById(`card-head-${id}`).ariaExpanded !== "true") {
				$(`#project-${id}`).load(`/ActiveProjects/index?handler=ProjectPartial&id=${id}`);
			}
		}

		$(document).ready(function () {
			initModalPlaceHolder();
		});
	</script>
}
